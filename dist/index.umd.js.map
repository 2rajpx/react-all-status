{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["/**\n * react-all-status\n *\n * Copyright Â© 2017 Tooraj Khatibi. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { bool, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst createState = (stateName, initialState = {}) => {\n  /**\n   * ===========================================================================\n   * Selectors\n   * ===========================================================================\n   */\n  const isActive = (state, flag) => !!state[stateName][flag];\n\n  /**\n   * ===========================================================================\n   * Actions\n   * ===========================================================================\n   */\n  const TOGGLE = 'TOGGLE';\n  const toggle = flag => ({\n    type: TOGGLE,\n    stateName,\n    flag,\n  });\n  const ACTIVATE = 'ACTIVATE';\n  const activate = flag => ({\n    type: ACTIVATE,\n    stateName,\n    flag,\n  });\n  const DEACTIVATE = 'DEACTIVATE';\n  const deactivate = flag => ({\n    type: DEACTIVATE,\n    stateName,\n    flag,\n  });\n\n  /**\n   * ===========================================================================\n   * Reducer\n   * ===========================================================================\n   */\n  const reducer = (state = initialState, action) => {\n    if (stateName !== action.stateName) {\n      return state;\n    }\n    switch (action.type) {\n      case TOGGLE: {\n        const newState = { ...state };\n        newState[action.flag] = !state[action.flag];\n        return newState;\n      }\n      case ACTIVATE: {\n        const newState = { ...state };\n        newState[action.flag] = true;\n        return newState;\n      }\n      case DEACTIVATE: {\n        const newState = { ...state };\n        newState[action.flag] = false;\n        return newState;\n      }\n      default: {\n        return state;\n      }\n    }\n  };\n\n  /**\n   * ===========================================================================\n   * Prop Names\n   * ===========================================================================\n   */\n  const capitalize = (string) => string.charAt(0).toUpperCase() + string.slice(1);\n  const createValuePropName = (flag) => `${stateName}${capitalize(flag)}Value`;\n  const createTogglePropName = (flag) => `${stateName}${capitalize(flag)}Toggle`;\n  const createActivatePropName = (flag) => `${stateName}${capitalize(flag)}Activate`;\n  const createDeactivatePropName = (flag) => `${stateName}${capitalize(flag)}Deactivate`;\n  const createPropNames = (flag) => ({\n    value: createValuePropName(flag),\n    toggle: createTogglePropName(flag),\n    activate: createActivatePropName(flag),\n    deactivate: createDeactivatePropName(flag),\n  });\n\n  /**\n   * ===========================================================================\n   * Higer-order Component (HOC)\n   * ===========================================================================\n   */\n  const createHoC = (flags) => (component) => {\n    const mapStateToProps = (state) => {\n      const props = {};\n      flags.forEach((flag) => {\n        props[createValuePropName(flag)] = isActive(state, flag);\n      });\n      return props;\n    };\n    const mapDispatchToProps = (dispatch) => {\n      const props = {};\n      flags.forEach((flag) => {\n        props[createTogglePropName(flag)] = () => dispatch(toggle(flag));\n        props[createActivatePropName(flag)] = () => dispatch(activate(flag));\n        props[createDeactivatePropName(flag)] = () => dispatch(deactivate(flag));\n      });\n      return props;\n    };\n    return connect(mapStateToProps, mapDispatchToProps)(component);\n  };\n\n  /**\n   * ===========================================================================\n   * Prop Types\n   * ===========================================================================\n   */\n  const createPropTypes = (flag, requiredProps = []) => {\n    const propTypes = {};\n    const valueName = createValuePropName(flag);\n    const toggleName = createTogglePropName(flag);\n    const activateName = createActivatePropName(flag);\n    const deactivateName = createDeactivatePropName(flag);\n    propTypes[valueName] = requiredProps.indexOf(valueName) !== -1\n      ? bool.isRequired\n      : bool;\n    propTypes[toggleName] = requiredProps.indexOf(toggleName) !== -1\n      ? func.isRequired\n      : func;\n    propTypes[activateName] = requiredProps.indexOf(activateName) !== -1\n      ? func.isRequired\n      : func;\n    propTypes[deactivateName] = requiredProps.indexOf(deactivateName) !== -1\n      ? func.isRequired\n      : func;\n    return propTypes;\n  };\n\n  return {\n    TOGGLE,\n    ACTIVATE,\n    DEACTIVATE,\n    toggle,\n    activate,\n    deactivate,\n    isActive,\n    reducer,\n    createPropNames,\n    createValuePropName,\n    createTogglePropName,\n    createActivatePropName,\n    createDeactivatePropName,\n    createHoC,\n    createPropTypes,\n  };\n};\n\nexport default createState;\n"],"names":["createState","stateName","initialState","isActive","state","flag","TOGGLE","toggle","type","ACTIVATE","activate","DEACTIVATE","deactivate","reducer","action","newState","capitalize","string","charAt","toUpperCase","slice","createValuePropName","createTogglePropName","createActivatePropName","createDeactivatePropName","createPropNames","value","createHoC","flags","component","mapStateToProps","props","forEach","mapDispatchToProps","dispatch","connect","createPropTypes","requiredProps","propTypes","valueName","toggleName","activateName","deactivateName","indexOf","bool","isRequired","func"],"mappings":"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"}